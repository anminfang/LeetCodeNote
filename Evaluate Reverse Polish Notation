import java.io.*;
import java.util.*;
import java.text.*;
import java.math.*;
import java.util.regex.*;

public class Main {


/*请完成下面这个函数，实现题目要求的功能
当然，你也可以不按照下面这个模板来作答，完全按照自己的想法来 ^-^ 
******************************开始写代码******************************/
    static int evalRPN(String[] tokens) {
    	Stack<Integer> stack = new Stack<>();
        int a, b;
        for (String item: tokens) {
        	if (item.equals("+")) {
            	stack.add(stack.pop() + stack.pop());
            }
            else if (item.equals("-")) {
                b = stack.pop();
                a = stack.pop();
            	stack.add(a - b);
            }
            else if (item.equals("/")) {
            	b = stack.pop();
                a = stack.pop();
                stack.add(a / b);
            }
            else if (item.equals("*")) {
            	stack.add(stack.pop() * stack.pop());
            }
            else {
            	stack.add(Integer.parseInt(item));
            }
        }
        return stack.pop();
    }
        
	
/******************************结束写代码******************************/


    public static void main(String[] args){
        Scanner in = new Scanner(System.in);
        int res;
            
        int _tokens_size = 0;
        _tokens_size = Integer.parseInt(in.nextLine().trim());
        String[] _tokens = new String[_tokens_size];
        String _tokens_item;
        for(int _tokens_i = 0; _tokens_i < _tokens_size; _tokens_i++) {
            try {
                _tokens_item = in.nextLine();
            } catch (Exception e) {
                _tokens_item = null;
            }
            _tokens[_tokens_i] = _tokens_item;
        }
  
        res = evalRPN(_tokens);
        System.out.println(String.valueOf(res));    

    }
}
