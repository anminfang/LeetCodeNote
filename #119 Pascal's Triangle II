/**
 * Point: Dynamic Programming, the formula is prvious list to plus from first item to last item.
 * Bug: Missed ";"
 * Time Complexity: O(N^2)
 * Space Complexity: O(N)
 *
 *
 */

class Solution {
    public List<Integer> getRow(int rowIndex) {
      
        List<Integer> prev = new ArrayList<>();
        
        prev.add(1);
        if (rowIndex == 0) return prev;
                
        for (int i = 1; i < rowIndex+1; i++) {
            List<Integer> current = new ArrayList<>();
            
            current.add(1);
            
            for (int j = 1; j < i; j++) {
                current.add(prev.get(j-1) + prev.get(j));
            }
            
            current.add(1);
            prev = current;
        }
        return prev;
    }
}
