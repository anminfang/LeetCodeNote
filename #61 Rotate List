/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
class Solution {
    public ListNode rotateRight(ListNode head, int k) {
        if (head == null || k == 0) return head;
        int len = 1;
        ListNode tail = head;
        while (tail.next != null) {
            tail = tail.next;
            len++;
        }
        k %= len;
        if (k == 0) return head;
        
        ListNode pivot = head;
        int index = len - k - 1; // go to previous listnode
        while (index-- > 0) {
            pivot = pivot.next;
        }
        tail.next = head;
        head = pivot.next;
        pivot.next = null;
        return head;
    }
}
