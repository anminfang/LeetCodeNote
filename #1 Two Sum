/**
 * Point: One-Pass HashMap
 * Bug: 
 * Time Complexity: O(N)
 * Space Complexity: O(N)
 *
 */
class Solution {
    public int[] twoSum(int[] nums, int target) {
        int[] result = new int[2];
        if (nums == null || nums.length == 0) return result;
        HashMap<Integer, Integer> map = new HashMap<>();
        for (int i = 0; i < nums.length; i++) {
            int newTarget = target - nums[i];
            if (map.containsKey(newTarget)) {
                result[0] = map.get(newTarget);
                result[1] = i;
            }
            map.put(nums[i], i);
        }
        return result;
    }
}
