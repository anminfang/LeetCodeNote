/**
 * Point: One loop, two pointer search result from two end of array toward middle 
 * Bug: Missed to put break in line 35, causing loop to run permanently.
 * Time Complexity: O(N)
 * Space Complexity: O(1)
 *
 *
 *
 */

class Solution {
    public int[] twoSum(int[] numbers, int target) {
        
        int[] result = new int[2];
        
        if ( numbers == null || numbers.length < 2) return result;
        
        int aux;
        int i = 0;
        int j = numbers.length - 1;
        
        while (i < j) {
            aux = numbers[i] + numbers[j];
            
            if (aux < target) i++;
            if (aux > target) j--;
            
            if (aux == target) {
                result[0] = i + 1;
                result[1] = j + 1;
                break;
            }
        }
        return result;
    }
}
