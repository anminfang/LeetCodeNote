/**
 * Point: Recursion
 * Bug: No
 * Time Complexity: O(N)
 * Space Complexity: O(N)
 *
 *
 */


/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    public List<String> binaryTreePaths(TreeNode root) {
        List<String> list = new ArrayList<>();
        
        if (root == null) return list;
        
        if (root.left == null && root.right == null) {
            list.add(root.val + "");
        }
        
        for (String nodeValue: binaryTreePaths(root.left)) {
            list.add(root.val + "->" + nodeValue);
        }
        
        for (String nodeValue: binaryTreePaths(root.right)) {
            list.add(root.val + "->" + nodeValue);
        }
        
        return list;
    }
}
