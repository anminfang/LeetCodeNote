/**
 * Point: Bitwise Manipulation, res will left shift until when the result of (n & 1) equals 1, add the result into res. After that, n will
 *        right shift 1 bit every round.
 * Bug:
 * Time Complexity: O(N)
 * Space Comlexity: O(N)
 *
 *
 */

public class Solution {
    // you need treat n as an unsigned value
    public int reverseBits(int n) {
        int res = 0;
        for (int i = 0; i < 32; i++) {
            res <<= 1;
            int tmp = n & 1;
            if (tmp != 0) res += tmp;
            n >>= 1;
        }
        return res;
    }
}
